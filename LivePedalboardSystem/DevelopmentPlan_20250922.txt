DevelopmentPlan_20250922
========================

Project: MagicPedalboardNew + CommandTree Integration
Date: 2025-09-22

Overview
--------
- MagicPedalboardNew is a JITLib-based SuperCollider pedalboard system with A/B chains, managed by Ndefs and a processor registry.
- CommandTree is a hierarchical command system navigated by a hexaphonic guitar (one string per MIDI channel), allowing the performer to select commands by playing specific frets/strings.
- The system is designed for robust, testable, and modular live performance control.

Current Canonical Files/Classes
-------------------------------
- Main pedalboard: MagicPedalboardNew.sc
- Processor registry: MagicProcessorLibrary.sc + MagicProcessorLibrary_defs.scd
- Test/bring-up runner: MagicPedalboardTestRunner.sc
- GUI/console display: MagicDisplay.sc, MagicDisplayGUI.sc, MagicDisplayGUI_GridDemo.sc, MagicDisplayGUI_Ext_VisualOnly.sc
- CommandTree system: CommandManager.sc, MDCommandTree.sc, MDCommandNode.sc, MDCommandBuilder.sc, MDCommandQueue.sc, MIDIInputManager.sc, GuitarMIDIHandler.sc, FootControllerHandler.sc, LaunchpadHandler.sc, UserDisplay.sc

Versioning and File Policy
--------------------------
- No more v3/v5/v6 in file names. Version numbers are kept in file/class headers only.
- Legacy/obsolete/old/shelved folders are left in place but not referenced by current code or documentation.
- When the project is finalized, all main files will be bumped to version 1.x and filenames cleaned up.

CommandTree â†’ Pedalboard Integration
------------------------------------
- Navigation: Guitar MIDI input (one string per channel) is used to traverse the command tree. Each string/fret selects a branch.
- Navigation is managed by MDCommandBuilder, which tracks the current node and fret path.
- When navigation is complete (all strings traversed or user triggers completion), the payload at the reached node is enqueued in MDCommandQueue.
- In 'queue' mode, the payload is added to the queue. In 'send' mode, the queue is exported as an OSC path (e.g., /add/delay) and cleared.
- The exported OSC path is sent to the pedalboard adapter (e.g., ~ct_sendAndApply).
- Partial queues (not at a leaf) may be valid and sent, e.g., /audio/time-based/delay as a generic command, or /audio/time-based/delay/multi-tap as a specific one.

Integration Points and APIs
---------------------------
- CommandManager:
    - .queue (MDCommandQueue): holds commands to send
    - .builder (MDCommandBuilder): manages navigation
    - .midiManager (MIDIInputManager): handles MIDI input and mode switching
    - .setStatus(text): updates status in the display

- MDCommandQueue:
    - .enqueueCommand(payload): add a command
    - .exportAsOSCPath: returns a string like /add/delay
    - .clearQueue: empties the queue

- MDCommandBuilder:
    - .isAtLeaf: true if navigation is at a leaf node
    - .getCurrentPayload: returns the payload at the current node

- MIDIInputManager:
    - .setMode(modeSymbol): changes mode (prog, queue, send, etc.)
    - .handleModeChange(modeSymbol): triggers navigation, queueing, or sending

- UserDisplay:
    - .setStatus(text): updates status in the display
    - .updateTextField(box, msg): updates specific display fields

Navigation Completion and Sending
---------------------------------
- Navigation is complete when all required strings have been played or the user triggers completion (e.g., via foot controller).
- Success is typically reaching a leaf node (builder.isAtLeaf), but partial queues are also valid in some cases.
- The pedalboard adapter should be called when the CommandTree is in 'send' mode and the queue is exported.
- The actual call to the pedalboard adapter can be done immediately or scheduled on AppClock for thread safety.

Clock Context
-------------
- Navigation and queueing: MIDI input and navigation are handled in real time (MIDI callbacks), but UI updates are deferred to AppClock.
- Sending to pedalboard: The call to the pedalboard adapter can be immediate or scheduled on AppClock.

Device/Mode Routing
-------------------
- Devices are mapped by symbolic names to source IDs in MIDIInputManager.
- Handlers are bound per device (guitar, foot controller, launchpad, etc.).
- Modes: prog (navigation), queue (add payload to queue), send (send queue to pedalboard).

Status Callbacks for Display
----------------------------
- CommandManager.setStatus(text): updates the status field in the display.
- Display fields: modeText, queueText, lastCommandText, userChoicesText, statusText.
- At every step of navigation, available commands or branches should be shown in the display.

Open Questions / To Be Finalized
--------------------------------
1. Pedalboard should be called when CommandTree is in 'send' mode and the queue is exported (confirmed).
2. Whether to call the pedalboard adapter synchronously or always on AppClock is still open; use whichever is simplest and most robust.
3. Status updates for MagicDisplay/MagicDisplayGUI HUD: eventually needed, but for now, focus on showing available commands/branches at each navigation step.
4. Partial queues are valid and may be sent, not just at leaf nodes.

Next Steps
----------
- Proceed with Phase 1 cleanup and README updates.
- Prepare Phase 2 logger integration patch and test script.
- Prepare Phase 3 CommandTree-to-pedalboard glue code and headless test script.

End of DevelopmentPlan_20250922
